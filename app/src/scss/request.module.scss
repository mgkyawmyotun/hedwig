@use 'font';
@use 'color';
@use 'functions' as *;
@use 'helper' as *;

.request {
  display: grid;
  grid-template-columns: minmax(max-content, 8%) 75% minmax(max-content, 17%);
  grid-template-rows: 1fr;

  & > input {
    font-size: responsive_font(0.875rem, 1.5rem);
    font-family: font.$domine;
    padding: 0.5em 0.8em;
    outline: none;
    @include border-px-gray(2px);

    border-left: none;
    background-color: color.$cultured;
    // & :focus {
    // }
    &::placeholder {
      font-size: 0.8em;
      font-family: font.$righteous;
      color: color.$davys-grey;
    }
    &[data-valid='false'] {
      border: 2px solid red;
    }
  }

  & .request__send_button {
    @include button-primary();
  }
  & .request__save_button {
    @include button-secondary();
  }
}
.request__method {
  width: 100%;
  @include border-px-gray(2px);
  border-right: none;
  position: relative;
  cursor: pointer;

  font-family: font.$domine;
  font-size: responsive_font(0.5rem, 1.25rem);
  display: flex;
  align-items: center;
  flex-flow: row nowrap;

  &::after {
    content: '';
    position: absolute;
    left: 100%;
    @include center-absolute-position;
    border-left: 1px solid color.$light-gray;
    height: 80%;
  }
  /** request method selector **/
  & > div:first-child {
    display: flex;
    align-items: center;
    flex-flow: row nowrap;
    padding: 0.5em;
    font-weight: 700;
    & > svg {
      width: 0.8em;
      padding-left: 0.2em;
    }
    color: color.$davys-grey;
  }
  & > .request__method__drawer {
    position: absolute;
    top: 80%;
    left: -5%;
    z-index: 1000;
    background-color: color.$cultured-2;
    font-size: responsive_font(0.5rem, 1.125rem);
    @include border-px-gray;
    padding: 1em;
    transform-origin: top center;
    transform: scale(0);
    transition: transform;
    transition-duration: 200ms;
    & > li {
      list-style: none;
      padding: 0.2em 0;
      color: color.$charleston-green;
      &:hover {
        color: color.$davys-grey;
      }
    }
  }
}

.show {
  transform: scale(1) !important;
}
